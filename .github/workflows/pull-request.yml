name: Build and Test with Coverage

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{secrets.CONFIG_SUBMODULE_TOKEN}}
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x gradlew

      #라이브러리 캐싱
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      #Gradle 빌드 및 테스트
      - name: Build and Test with Gradle
        run: ./gradlew clean build test jacocoTestReport

      #테스트 결과 출력
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

      #실패시 실패 코드에 코멘트
      - name: If the test fails, register a check comment in the failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      #테스트 커버리지 리포트 생성 확인
      - name: Check if coverage report exists
        id: check_coverage
        run: |
          if [ -f "${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml" ]; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi
            
      #테스트 커버리지 리포트 출력
      - name: Add coverage to PR
        if: env.exists == 'true'
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: 📝 테스트 커버리지 리포트입니다!
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 50
          min-coverage-changed-files: 50
